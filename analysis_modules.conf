#@description A sample list of setups
#@key_label   "name"
#@meta_label  "type"

[name="particle_range_cut" type="dpp::if_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The label/name of the cut service
cut_service.label : string = "Cuts"

#@description The name of the condition cut
condition_cut : string = "range_particle"

#@description The name of the module to be processed when condition is checked
then_module : string = "io_output_analysed"

#@description The name of the module to be processed when condition is NOT checked
else_module : string = "io_output_particle_track_non_selected"

[name="process_with_particle_track_cuts" type="dpp::if_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The label/name of the cut service
cut_service.label : string = "Cuts"

#@description The name of the condition cut
condition_cut : string = "particle_track_cut"

# #@description The name of the module to be processed when condition is checked
# then_module : string = "gamma_tracking_chain"

#@description The name of the module to be processed when condition is checked
then_module : string = "gamma_tracking_chain"

# #@description The name of the module to be processed when condition is checked
# then_module : string = "io_output_particle_track_selected"

#@description The name of the module to be processed when condition is NOT checked
else_module : string = "io_output_particle_track_non_selected"

[name="particle_tracking_chain" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[4] = \
  "remove_particle_track_data" \
  "charged_particle_tracking" \
  "io_output_particle_track" \
  "process_with_particle_track_cuts"

[name="process_with_fitting_cuts" type="dpp::if_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The label/name of the cut service
cut_service.label : string = "Cuts"

#@description The name of the condition cut
condition_cut : string = "tracker_trajectory_cut"

#@description The name of the module to be processed when condition is checked
then_module : string = "particle_tracking_chain"

#@description The name of the module to be processed when condition is NOT checked
else_module : string = "io_output_tracker_trajectory_non_selected"

[name="fitting_chain" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[4] = \
  "remove_tracker_trajectory_data" \
  "trackfit_tracker_fitting" \
  "io_output_tracker_trajectory" \
  "process_with_fitting_cuts"

[name="process_with_clustering_cuts" type="dpp::if_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The label/name of the cut service
cut_service.label : string = "Cuts"

#@description The name of the condition cut
condition_cut : string = "tracker_clustering_cut"

#@description The name of the module to be processed when condition is checked
then_module : string = "fitting_chain"

#@description The name of the module to be processed when condition is NOT checked
else_module : string = "io_output_tracker_clustering_non_selected"

[name="clustering_chain" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[4] = \
  "remove_tracker_clustering_data" \
  "cat_tracker_clustering" \
  "io_output_tracker_clustering" \
  "process_with_clustering_cuts"

[name="process_with_calibrated_cuts" type="dpp::if_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The label/name of the cut service
cut_service.label : string = "Cuts"

#@description The name of the condition cut
condition_cut : string = "calibrated_cut"

#@description The name of the module to be processed when condition is checked
then_module : string = "clustering_chain"

#@description The name of the module to be processed when condition is NOT checked
else_module : string = "io_output_calibrated_non_selected"

[name="calibration_chain" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[4] = \
  "add_header" \
  "tracker_s2c" \
  "calorimeter_s2c" \
  "io_output_calibrated"

[name="simulation_chain" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[2] = \
  "simulation" \
  "io_output_simulated"

[name="devel_topology_cut" type="dpp::if_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The label/name of the cut service
cut_service.label : string = "Cuts"

#@description The name of the condition cut
condition_cut : string = "vertex_location"

#@description The name of the module to be processed when condition is checked
then_module : string = "io_output_topology_selected"

#@description The name of the module to be processed when condition is NOT checked
else_module : string = "io_output_topology_non_selected"

[name="data_flow_chain" type="dpp::chain_module"]

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[16] = \
"simulation" \
"add_header" \
"io_output_simulated" \
"tracker_s2c" \
"calorimeter_s2c" \
"io_output_calibrated" \
"cat_tracker_clustering" \
"io_output_tracker_clustering" \
"trackfit_tracker_fitting" \
"io_output_tracker_trajectory" \
"charged_particle_tracking" \
"io_output_particle_track" \
"gamma_clustering" \
"io_output_gamma_builder" \
"topology_module" \
"io_output_topology" \
"control_plot"

[name="data_bank_cleaning_chain" type="dpp::chain_module"]

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[5] = \
"remove_simulated_data" \
"remove_calibrated_data" \
"remove_tracker_clustering_data" \
"remove_tracker_trajectory_data" \
"io_output_analysed"

[name="minimum_bias_chain" type="dpp::chain_module"]

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[10] = \
"simulation" \
"add_header" \
"tracker_s2c" \
"calorimeter_s2c" \
"cat_tracker_clustering" \
"trackfit_tracker_fitting" \
"charged_particle_tracking" \
"gamma_clustering" \
"topology_module" \
"io_output_analysed" \
"control_plot"

[name="topology_chain" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[2] = \
"topology_module" \
"topology_pattern_cut" \
"io_output_analysed"

[name="full_chain_reduced" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[6] = \
  "minimum_bias_chain" \
  "remove_simulated_data" \
  "remove_calibrated_data" \
  "remove_tracker_clustering_data" \
  "remove_tracker_trajectory_data" \
  "topology_pattern_cut" \
  "io_output_analysed" \
  "vertices_plot_module"

[name="full_chain_reduced_sd" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[3] = \
  "minimum_bias_chain" \
  "remove_simulated_data" \
  "topology_pattern_cut" \
  "io_output_analysed" \
  "vertices_plot_module"

[name="full_chain" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[2] = \
  "minimum_bias_chain" \
  "topology_pattern_cut" \
  "vertices_plot_module"

[name="reformat_data" type="dpp::chain_module"]

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The list of processing modules to be applied (in this order)
modules : string[7] = \
  "remove_header" \
  "add_header" \
  "remove_mc_visu_hits" \
  "remove_simulated_data" \
  "remove_calibrated_data" \
  "remove_tracker_clustering_data" \
  "remove_tracker_trajectory_data"

[name="control_plot" type="analysis::control_plot_module"]

#@description A SuperNEMO module to calculate the 0nu sensitivity

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The Histogram Service label
Histo_label : string = "Histo"

# #@description The ouput file where to store the histograms
# Histo_output_files : string[2] as path = "/tmp/${USER}/snemo.d/control_plots.root" "/tmp/${USER}/snemo.d/control_plots.xml"

# #@description The input file from where to load the histograms
# Histo_input_file : string as path = "/tmp/${USER}/snemo.d/analysis_saved.xml"

# #@description The ouput file where to store the histograms
# Histo_template_files : string[1] as path = "${SW_WORK_DIR}/snemo_configuration/current/histogram_templates.conf"

# #@description The key fields from 'Event Header' bank to build a unique key for histogram
# key_fields : string[2] = "event.genbb_label" "analysis.vertex_origin"

[name="universal_plot_module" type="analysis::universal_plot_module"]

#@description A SuperNEMO module to calculate the 0nu sensitivity

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The Histogram Service label
Histo_label : string = "Histo"

# #@description The ouput file where to store the histograms
# Histo_output_files : string[2] as path = "/tmp/${USER}/snemo.d/universal_plots.root" "/tmp/${USER}/snemo.d/universal_plots.xml"

#@description The ouput file where to store the histograms
Histo_output_files : string[2] as path = "./universal_plots.root" "./universal_plots.xml"

# #@description The input file from where to load the histograms
# Histo_input_file : string as path = "/tmp/${USER}/snemo.d/analysis_saved.xml"

# #@description The ouput file where to store the histograms
# Histo_template_files : string[1] as path = "${SW_WORK_DIR}/snemo_configuration/master/topology_templates.conf"

#@description The key fields from 'Event Header' bank to build a unique key for histogram
key_fields : string[2] = "event.genbb_label" "analysis.vertex_origin"

[name="vertices_plot_module" type="analysis::vertices_plot_module"]

#@description A SuperNEMO module to calculate the 0nu sensitivity

#@description Logging priority
logging.priority : string = "trace"

#@description The Histogram Service label
Histo_label : string = "Histo"

#@description The ouput file where to store the histograms
Histo_output_files : string[2] as path = "/tmp/${USER}/snemo.d/vertices_plots.root" "/tmp/${USER}/snemo.d/vertices_plots.xml"

# #@description The input file from where to load the histograms
# Histo_input_file : string as path = "/tmp/${USER}/snemo.d/analysis_saved.xml"

# #@description The ouput file where to store the histograms
# Histo_template_files : string[1] as path = "${SW_WORK_DIR}/snemo_configuration/master/topology_templates.conf"

# #@description The key fields from 'Event Header' bank to build a unique key for histogram
# key_fields : string[2] = "event.genbb_label" "analysis.vertex_origin"

[name="magnetic_field_module" type="analysis::snemo_bfield_1e_module"]

#@description A SuperNEMO module to calculate the 0nu sensitivity

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The Histogram Service label
Histo_label : string = "Histo"

#@description The ouput file where to store the histograms
Histo_output_files : string[2] as path = "/tmp/${USER}/snemo.d/magnetic_field_plots.root" "/tmp/${USER}/snemo.d/magnetic_field_plots.xml"

#@description The ouput file where to store the root objects
Root_output_files : string[1] as path =                       \
    "/tmp/${USER}/snemo.d/snemo_bfield_1e_tree.root"

# #@description The input file from where to load the histograms
# Histo_input_file : string as path = "/tmp/${USER}/snemo.d/analysis_saved.xml"

# #@description The ouput file where to store the histograms
# Histo_template_files : string[1] as path = "${SW_WORK_DIR}/snemo_configuration/master/topology_templates.conf"

# #@description The key fields from 'Event Header' bank to build a unique key for histogram
# key_fields : string[2] = "event.genbb_label" "analysis.vertex_origin"

# [name="export_root_module" type="snemo::reconstruction::processing::export_root_module"]

# #@description A SuperNEMO module to calculate the 0nu sensitivity

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

# max_records_total : integer = 100

# max_records_per_file : integer = 100

# max_files : integer = 1

# #@description Geometry service
# Geo_label : string = "Geo"

# # export.event_header : boolean = 1

# # export.true_particles : boolean = 1

# # export.true_step_hits : boolean = 1

# # export.true_hits : boolean = 1

# # export.calib_calorimeter_hits : boolean = 1

# # export.calib_tracker_hits : boolean = 1

# # export.tracker_clustering : boolean = 1

# # export.tracker_trajectories : boolean = 1

# mode : string = "single"

# single.filename : string = "/tmp/${USER}/snemo.d/root_export.root"

[name="root_export_module" type="snemo::processing::root_export_module"]

#@description A SuperNEMO module to calculate the 0nu sensitivity

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

max_records_total : integer = 10000000

max_records_per_file : integer = 10000000

max_files : integer = 100000

#@description Geometry service
Geo_label : string = "Geo"

export.topology_1e : boolean = true

export.topology_1e1a : boolean = true

export.topology_2e : boolean = true

export.topology_1e1p : boolean = true

export.topology_2p : boolean = true

export.topology_1e1g : boolean = true

export.topology_1e2g : boolean = true

export.topology_1e3g : boolean = true

export.topology_2e1g : boolean = true

export.topology_2e2g : boolean = true

export.topology_2e3g : boolean = true

mode : string = "single"

single.filename : string = "/tmp/${USER}/snemo.d/root_export.root"

# single.filename : string = "./root_export_bis.root"


# [name="matching_vertices_module" type="snemo::analysis::processing::matching_vertices_module"]

# #@description A SuperNEMO module to compute the two tracks vertices difference on the source foil

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description The Histogram Service label
# Histo_label : string = "Histo"

# #@description The ouput file where to store the histograms
# Histo_output_files : string[2] as path =                       \
#     "/tmp/${USER}/snemo.d/snemo_matching_vertices_study.root" \
#     "/tmp/${USER}/snemo.d/snemo_matching_vertices_study.xml"

# #@description The ouput file where to store the histograms
# Histo_template_files : string[1] as path = \
#     "${SW_WORK_DIR}/snanalysis.mine/resources/setups/snemo/processing/histo_template.conf"

# [name="matching_vertices_chain" type="dpp::chain_module"]

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description The list of processing modules to be applied (in this order)
# modules : string[3] = \
#         "matching_vertices_module" \
#         "process_with_matching_y_vertices_cuts" \
#         "process_with_matching_z_vertices_cuts"

# [name="tof_computing_module" type="snemo::analysis::processing::tof_computing_module"]

# #@description A SuperNEMO module to calculate the 0nu sensitivity

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

# [name="process_with_particle_tof_cuts" type="dpp::if_module"]

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description The label/name of the cut service
# cut_service.label : string = "Cuts"

# #@description The name of the condition cut
# condition_cut : string = "tof_selection"

# #@description The name of the module to be processed when condition is checked
# then_module : string = "io_output_tof_selected"

# #@description The name of the module to be processed when condition is NOT checked
# else_module : string = "io_output_tof_non_selected"

# [name="particle_tof_chain" type="dpp::chain_module"]

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description The list of processing modules to be applied (in this order)
# modules : string[2] = \
#         "tof_computing_module" \
#         "process_with_particle_tof_cuts" \
#         "io_output_tof_selected"
