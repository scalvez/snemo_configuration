#@description A sample list of setups
#@key_label   "name"
#@meta_label  "type"

[name="has_topology_data" type="dpp::utils_cut"]

#@description Cut description
cut.description : string = "Check availabity of TD"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The running mode of this utils_cut instance
mode : string = "has_bank"

#@description The name of the bank to be checked (mandatory)
has_bank.name : string = "TD"

[name="has_pattern" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Ensure pattern existence"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The running mode of this cut instance
mode.has_pattern : boolean = true

[name="no_pile_up" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Ensure absence of pile-up"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description The running mode of this cut instance
mode.no_pile_up : boolean = true

[name="2e::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 2e pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "2e"

[name="2e::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 2e pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[4] = \
"has_topology_data" \
"has_pattern"    \
"2e::has_classification_label" \
"no_pile_up"

[name="1e::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 1e pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for classificaion existence
mode.has_classification : boolean = true

#@description Activate the check for classification
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "1e"

[name="1e::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 1e pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"1e::has_classification_label"

[name="1e1a::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 1e1a pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "1e1a"

[name="1e1a::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 1e1a pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"1e1a::has_classification_label"

[name="1e1p::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 1e1p pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "1e1p"

[name="1e1p::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 1e1p pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[4] = \
"has_topology_data" \
"has_pattern"    \
"1e1p::has_classification_label" \
"no_pile_up"

[name="2p::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 2p pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "2p"

[name="2p::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 2p pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[4] = \
"has_topology_data" \
"has_pattern"    \
"2p::has_classification_label" \
"no_pile_up"

[name="1e1g::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 1e1g pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "1e1g"

[name="1e1g::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 1e1g pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"1e1g::has_classification_label"

[name="1e2g::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 1e2g pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "1e2g"

[name="1e2g::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 1e2g pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"1e2g::has_classification_label"

[name="1e3g::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 1e3g pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "1e3g"

[name="1e3g::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 1e3g pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"1e3g::has_classification_label"

[name="1eNg::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 1eNg pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "1e[0-9]+g"

[name="1eNg::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 1eNg pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"1eNg::has_classification_label"

[name="2e1g::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 2e1g pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "2e1g"

[name="2e1g::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 2e1g pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"2e1g::has_classification_label"

[name="2e2g::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 2e2g pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "2e2g"

[name="2e2g::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 2e2g pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"2e2g::has_classification_label"

[name="2e3g::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 2e3g pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "2e3g"

[name="2e3g::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 2e3g pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"2e3g::has_classification_label"

[name="2eNg::has_classification_label" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select 2eNg pattern id label"

#@description Logging priority
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for pattern id label
mode.has_classification : boolean = true

#@description Activate the check for pattern id label
mode.classification : boolean = true

#@description Label of the topology pattern id
classification.label : string = "2e[0-9]+g"

[name="2eNg::classification" type="cuts::multi_and_cut"]

#@description Cut description
cut.description : string = "Select events with 2eNg pattern"

#@description Logging priority
logging.priority : string = "warning"

#@description The cuts to be combined
cuts : string[3] = \
"has_topology_data" \
"has_pattern"    \
"2eNg::has_classification_label"

# [name="2eNg::has_classification_label" type="snemo::cut::topology_data_cut"]

# #@description Cut description
# cut.description : string = "Select 2eNg pattern id label"

# #@description Logging priority
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description Activate the check for pattern id label
# mode.has_classification : boolean = true

# #@description Activate the check for pattern id label
# mode.classification : boolean = true

# #@description Label of the topology pattern id
# classification.label : string = "2eNg"

# [name="2eNg::classification" type="cuts::multi_and_cut"]

# #@description Cut description
# cut.description : string = "Select events with 2eNg pattern"

# #@description Logging priority
# logging.priority : string = "warning"

# #@description The cuts to be combined
# cuts : string[3] = \
# "has_topology_data" \
# "has_pattern"    \
# "2eNg::has_classification_label"

[name="good_internal_probability" type="snemo::cut::tof_measurement_cut"]

#@description Cut description
cut.description : string = "Select events with a good internal probability"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for internal probability
mode.has_internal_probability : boolean = true

#@description Activate the check for range value of internal probability
mode.range_internal_probability : boolean = true

#@description Mode 'all' for the range probability
range_internal_probability.mode : string = "all"

#@description Minimal value for internal probability
range_internal_probability.min : real as fraction = 1 %

[name="bad_internal_probability" type="snemo::cut::tof_measurement_cut"]

#@description Cut description
cut.description : string = "Select events with a bad internal probability"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for internal probability
mode.has_internal_probability : boolean = true

#@description Activate the check for range value of internal probability
mode.range_internal_probability : boolean = true

#@description Mode 'all' for the range probability
range_internal_probability.mode : string = "all"

#@description Minimal value for internal probability
range_internal_probability.max : real as fraction = 1 %

[name="good_external_probability" type="snemo::cut::tof_measurement_cut"]

#@description Cut description
cut.description : string = "Select events with a good external probability"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for external probability
mode.has_external_probability : boolean = true

#@description Activate the check for range value of external probability
mode.range_external_probability : boolean = true

#@description Mode 'all' for the range probability
range_external_probability.mode : string = "all"

#@description Maximal value for external probability
range_external_probability.min : real as fraction = 4 %

[name="bad_external_probability" type="snemo::cut::tof_measurement_cut"]

#@description Cut description
cut.description : string = "Select events with bad external probability"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for external probability
mode.has_external_probability : boolean = true

#@description Activate the check for range value of external probability
mode.range_external_probability : boolean = true

#@description Mode 'all' for the range probability
range_external_probability.mode : string = "all"

#@description Maximal value for external probability
range_external_probability.max : real as fraction = 1e-3 %

[name="good_vertices_probability" type="snemo::cut::vertices_measurement_cut"]

#@description Cut description
cut.description : string = "Select events with good vertices probability"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for the vertex/ices location
mode.has_location : boolean = 1

#@description Activate the check for a specific vertex/ices location
mode.location : string = "foil"

#@description Activate the check for an existing internal probability
mode.has_vertices_probability : boolean = 1

#@description Activate the check on a specific range of common vertices probability
mode.range_vertices_probability : boolean = 1

#@description The minimal common vertices probability required
range_vertices_probability.min : real as fraction = 1 %

[name="bad_vertices_probability" type="snemo::cut::vertices_measurement_cut"]

#@description Cut description
cut.description : string = "Select events with bad vertices probability"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for an existing internal probability
mode.has_vertices_probability : boolean = 1

#@description Activate the check on a specific range of common vertices probability
mode.range_vertices_probability : boolean = 1

#@description The minimal common vertices probability required
range_vertices_probability.max : real as fraction = 1 %

[name="good_vertices_distance" type="snemo::cut::vertices_measurement_cut"]

#@description Cut description
cut.description : string = "Select events with good vertices distance"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check for the vertex/ices location
mode.has_location : boolean = 1

#@description Activate the check for a specific vertex/ices location
mode.location : string = "foil"

# #@description Activate the check for a specific vertex/ices location
# mode.location : string = "calo"

#@description Activate the check for an existing vertices distance measurement
mode.has_vertices_distance : boolean = 1

#@description Activate the check on a specific range of vertices distance in Y
mode.range_vertices_distance_y : boolean = 1

#@description Activate the check on a specific range of vertices distance in Z
mode.range_vertices_distance_z : boolean = 1

# #@description The minimal vertices distance in X probability required
# range_vertices_distance_x.min : real as length = 100 mm

# #@description The minimal vertices distance in X probability required
# range_vertices_distance_x.max : real as length = 1000 mm

# #@description The minimal vertices distance in Y probability required
# range_vertices_distance_y.min : real as length = 60 mm

#@description The minimal vertices distance in Y probability required
range_vertices_distance_y.max : real as length = 60 mm

# #@description The minimal vertices distance in Z probability required
# range_vertices_distance_z.min : real as length = 100 mm

#@description The minimal vertices distance in Z probability required
range_vertices_distance_z.max : real as length = 70 mm

# [name="one_gamma" type="snemo::cut::topology_data_cut"]

# #@description Cut description
# cut.description : string = "Select events with one gamma particle"

# #@description Logging priority'
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description Activate the check on a specific range of common vertices probability
# mode.range_number_of_gammas : boolean = 1

# #@description The minimal number of gamma particles required
# range_number_of_gammas.min : integer = 1

# #@description The maximal number of gamma particles required
# range_number_of_gammas.max : integer = 1

# [name="two_gamma" type="snemo::cut::topology_data_cut"]

# #@description Cut description
# cut.description : string = "Select events with two gamma particles"

# #@description Logging priority'
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description Activate the check on a specific range of common vertices probability
# mode.range_number_of_gammas : boolean = 1

# #@description The minimal number of gamma particles required
# range_number_of_gammas.min : integer = 2

# #@description The maximal number of gamma particles required
# range_number_of_gammas.max : integer = 2

# [name="three_gamma" type="snemo::cut::topology_data_cut"]

# #@description Cut description
# cut.description : string = "Select events with three gamma particles"

# #@description Logging priority'
# logging.priority : string = @variant(core:logging_priority|"warning")

# #@description Activate the check on a specific range of common vertices probability
# mode.range_number_of_gammas : boolean = 1

# #@description The minimal number of gamma particles required
# range_number_of_gammas.min : integer = 3

# #@description The maximal number of gamma particles required
# range_number_of_gammas.max : integer = 3

[name="one_gamma" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select events with one gamma particle"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check on a specific range of common vertices probability
mode.classification : boolean = 1

#@description The maximal number of gamma particles required
classification.label : string = ".*1g.*"

[name="two_gamma" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select events with one gamma particle"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check on a specific range of common vertices probability
mode.classification : boolean = 1

#@description The maximal number of gamma particles required
classification.label : string = ".*2g.*"

[name="three_gamma" type="snemo::cut::topology_data_cut"]

#@description Cut description
cut.description : string = "Select events with one gamma particle"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Activate the check on a specific range of common vertices probability
mode.classification : boolean = 1

#@description The maximal number of gamma particles required
classification.label : string = ".*3g.*"

[name="2e::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with a beta-beta event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "int_prob" "vtx_dist"

int_prob.cut_label         : string = "good_internal_probability"
int_prob.measurement_label : string = "tof_e1_e2"
# ext_prob.cut_label         : string = "bad_external_probability"
# ext_prob.measurement_label : string = "tof_e1_e2"
# vtx_prob.cut_label         : string = "good_vertices_probability"
# vtx_prob.measurement_label : string = "vertex_e1_e2"
vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_e1_e2"

[name="2e::crossing" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with a crossing electron event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "ext_prob" "vtx_dist"

# int_prob.cut_label         : string = "bad_internal_probability"
# int_prob.measurement_label : string = "tof_e1_e2"
ext_prob.cut_label         : string = "good_external_probability"
ext_prob.measurement_label : string = "tof_e1_e2"
# vtx_prob.cut_label         : string = "good_vertices_probability"
# vtx_prob.measurement_label : string = "vertex_e1_e2"
vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_e1_e2"

[name="1e1a::common" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with alpha decay"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[1] = "vtx_dist"

vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_e1_a1"

[name="1e1p::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with an electron and positron internal event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "int_prob" "vtx_dist"

int_prob.cut_label         : string = "good_internal_probability"
int_prob.measurement_label : string = "tof_e1_p1"
# ext_prob.cut_label         : string = "bad_external_probability"
# ext_prob.measurement_label : string = "tof_e1_p1"
# vtx_prob.cut_label         : string = "good_vertices_probability"
# vtx_prob.measurement_label : string = "vertex_e1_p1"
vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_e1_p1"

[name="1e1p::crossing" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with an electron and positron internal event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "ext_prob" "vtx_dist"

# int_prob.cut_label         : string = "good_internal_probability"
# int_prob.measurement_label : string = "tof_e1_p1"
ext_prob.cut_label         : string = "good_external_probability"
ext_prob.measurement_label : string = "tof_e1_p1"
# vtx_prob.cut_label         : string = "good_vertices_probability"
# vtx_prob.measurement_label : string = "vertex_e1_p1"
vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_e1_p1"

[name="2p::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with an internal hypothesis"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "int_prob" "vtx_dist"

int_prob.cut_label         : string = "good_internal_probability"
int_prob.measurement_label : string = "tof_p1_p2"
# ext_prob.cut_label         : string = "bad_external_probability"
# ext_prob.measurement_label : string = "tof_p1_p2"
# vtx_prob.cut_label         : string = "good_vertices_probability"
# vtx_prob.measurement_label : string = "vertex_p1_p2"
vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_p1_p2"

[name="2p::crossing" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with a crossing positron event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "ext_prob" "vtx_dist"

# int_prob.cut_label         : string = "bad_internal_probability"
# int_prob.measurement_label : string = "tof_p1_p2"
ext_prob.cut_label         : string = "good_external_probability"
ext_prob.measurement_label : string = "tof_p1_p2"
# vtx_prob.cut_label         : string = "good_vertices_probability"
# vtx_prob.measurement_label : string = "vertex_p1_p2"
vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_p1_p2"

[name="1e1g::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with an electron and gamma event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "int_prob" "ext_prob"

int_prob.cut_label         : string = "good_internal_probability"
int_prob.measurement_label : string = "tof_e1_g1"
ext_prob.cut_label         : string = "bad_external_probability"
ext_prob.measurement_label : string = "tof_e1_g1"

[name="1e1g::external" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with an external electron/gamma event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[2] = "int_prob" "ext_prob"

int_prob.cut_label         : string = "bad_internal_probability"
int_prob.measurement_label : string = "tof_e1_g1"
ext_prob.cut_label         : string = "good_external_probability"
ext_prob.measurement_label : string = "tof_e1_g1"

[name="1e2g::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with internal electron and two gammas event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[4] = "int_prob" "ext_prob" "int_prob2" "ext_prob2"

int_prob.cut_label          : string = "good_internal_probability"
int_prob.measurement_label  : string = "tof_e1_g1"
ext_prob.cut_label          : string = "bad_external_probability"
ext_prob.measurement_label  : string = "tof_e1_g1"
int_prob2.cut_label         : string = "good_internal_probability"
int_prob2.measurement_label : string = "tof_e1_g2"
ext_prob2.cut_label         : string = "bad_external_probability"
ext_prob2.measurement_label : string = "tof_e1_g2"

[name="1e3g::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with internal electron and three gammas event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[6] = "int_prob" "ext_prob" "int_prob2" "ext_prob2" "int_prob3" "ext_prob3"

int_prob.cut_label         : string = "good_internal_probability"
int_prob.measurement_label : string = "tof_e1_g1"
ext_prob.cut_label         : string = "bad_external_probability"
ext_prob.measurement_label : string = "tof_e1_g1"
int_prob2.cut_label         : string = "good_internal_probability"
int_prob2.measurement_label : string = "tof_e1_g2"
ext_prob2.cut_label         : string = "bad_external_probability"
ext_prob2.measurement_label : string = "tof_e1_g2"
int_prob3.cut_label         : string = "good_internal_probability"
int_prob3.measurement_label : string = "tof_e1_g3"
ext_prob3.cut_label         : string = "bad_external_probability"
ext_prob3.measurement_label : string = "tof_e1_g3"

[name="2e1g::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with two internal electrons and a gamma event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[4] = "int_prob" "ext_prob" "int_prob_B" "ext_prob_B"

int_prob.cut_label         : string = "good_internal_probability"
int_prob.measurement_label : string = "tof_e1_g1"
ext_prob.cut_label         : string = "bad_external_probability"
ext_prob.measurement_label : string = "tof_e1_g1"
int_prob_B.cut_label         : string = "good_internal_probability"
int_prob_B.measurement_label : string = "tof_e2_g1"
ext_prob_B.cut_label         : string = "bad_external_probability"
ext_prob_B.measurement_label : string = "tof_e2_g1"

[name="2e2g::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with two internal electrons and two gammas event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[8] = "int_prob" "ext_prob" "int_prob_B" "ext_prob_B" "int_prob2" "ext_prob2" "int_prob_B2" "ext_prob_B2"

int_prob.cut_label            : string = "good_internal_probability"
int_prob.measurement_label    : string = "tof_e1_g1"
ext_prob.cut_label            : string = "bad_external_probability"
ext_prob.measurement_label    : string = "tof_e1_g1"
int_prob_B.cut_label          : string = "good_internal_probability"
int_prob_B.measurement_label  : string = "tof_e2_g1"
ext_prob_B.cut_label          : string = "bad_external_probability"
ext_prob_B.measurement_label  : string = "tof_e2_g1"
int_prob2.cut_label           : string = "good_internal_probability"
int_prob2.measurement_label   : string = "tof_e1_g2"
ext_prob2.cut_label           : string = "bad_external_probability"
ext_prob2.measurement_label   : string = "tof_e1_g2"
int_prob_B2.cut_label         : string = "good_internal_probability"
int_prob_B2.measurement_label : string = "tof_e2_g2"
ext_prob_B2.cut_label         : string = "bad_external_probability"
ext_prob_B2.measurement_label : string = "tof_e2_g2"

[name="2e3g::internal" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with two internal electrons and two gammas event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[12] = "int_prob" "ext_prob" "int_prob_B" "ext_prob_B" "int_prob2" "ext_prob2" "int_prob_B2" "ext_prob_B2" "int_prob3" "ext_prob3" "int_prob_B3" "ext_prob_B3"

int_prob.cut_label            : string = "good_internal_probability"
int_prob.measurement_label    : string = "tof_e1_g1"
ext_prob.cut_label            : string = "bad_external_probability"
ext_prob.measurement_label    : string = "tof_e1_g1"
int_prob_B.cut_label          : string = "good_internal_probability"
int_prob_B.measurement_label  : string = "tof_e2_g1"
ext_prob_B.cut_label          : string = "bad_external_probability"
ext_prob_B.measurement_label  : string = "tof_e2_g1"
int_prob2.cut_label           : string = "good_internal_probability"
int_prob2.measurement_label   : string = "tof_e1_g2"
ext_prob2.cut_label           : string = "bad_external_probability"
ext_prob2.measurement_label   : string = "tof_e1_g2"
int_prob_B2.cut_label         : string = "good_internal_probability"
int_prob_B2.measurement_label : string = "tof_e2_g2"
ext_prob_B2.cut_label         : string = "bad_external_probability"
ext_prob_B2.measurement_label : string = "tof_e2_g2"
int_prob3.cut_label           : string = "good_internal_probability"
int_prob3.measurement_label   : string = "tof_e1_g3"
ext_prob3.cut_label           : string = "bad_external_probability"
ext_prob3.measurement_label   : string = "tof_e1_g3"
int_prob_B3.cut_label         : string = "good_internal_probability"
int_prob_B3.measurement_label : string = "tof_e2_g3"
ext_prob_B3.cut_label         : string = "bad_external_probability"
ext_prob_B3.measurement_label : string = "tof_e2_g3"

[name="vertex_location" type="snemo::cut::channel_cut"]

#@description Cut description
cut.description : string = "Select events compatible with a beta-beta event"

#@description Logging priority'
logging.priority : string = @variant(core:logging_priority|"warning")

#@description Cut list
cuts : string[1] = "vtx_dist"

vtx_dist.cut_label         : string = "good_vertices_distance"
vtx_dist.measurement_label : string = "vertex_e1_p1"